// Generated by CoffeeScript 1.6.3
var Game, game,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Game = (function(_super) {
  __extends(Game, _super);

  function Game() {
    Game.__super__.constructor.apply(this, arguments);
    atom.input.bind(atom.key.LEFT_ARROW, 'left');
    atom.input.bind(atom.key.RIGHT_ARROW, 'right');
    atom.input.bind(atom.key.SPACE, 'jump');
    this.speed = 200;
    this.gravity = 9.8;
    this.player = {
      width: 100,
      height: 100,
      x: atom.width / 2,
      y: atom.height,
      vy: 0,
      color: 'white'
    };
  }

  Game.prototype.update = function(dt) {
    if (atom.input.pressed('right')) {
      this.player.color = 'red';
    }
    if (atom.input.pressed('left')) {
      this.player.color = 'blue';
    }
    if (atom.input.down('right')) {
      this.player.x += dt * this.speed;
    }
    if (atom.input.down('left')) {
      this.player.x -= dt * this.speed;
    }
    if (atom.input.pressed('jump')) {
      this.player.color = 'white';
      this.player.vy = -8;
    }
    this.player.y = Math.min(atom.height, this.player.y + this.player.vy);
    return this.player.vy += dt * this.gravity;
  };

  Game.prototype.draw = function() {
    atom.context.fillStyle = 'black';
    atom.context.fillRect(0, 0, atom.width, atom.height);
    atom.context.fillStyle = this.player.color;
    return atom.context.fillRect(this.player.x - this.player.width / 2, this.player.y - this.player.height, this.player.width, this.player.height);
  };

  return Game;

})(atom.Game);

game = new Game;

window.onblur = function() {
  return game.stop();
};

window.onfocus = function() {
  return game.run();
};

game.run();
